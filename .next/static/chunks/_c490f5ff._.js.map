{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/futuzor/Documentos/JavaScript/React/NextJS/dev-talent-showcase/constants/skills.ts"],"sourcesContent":["export const skillsList = [\n\t\"JavaScript\",\n\t\"React\",\n\t\"Next.js\",\n\t\"TypeScript\",\n\t\"Node.js\",\n\t\"GraphQL\",\n\t\"MongoDB\",\n\t\"PostgreSQL\",\n\t\"MySQL\",\n\t\"Redis\",\n\t\"Docker\",\n\t\"Kubernetes\",\n\t\"AWS\",\n\t\"GCP\",\n\t\"Terraform\",\n\t\"Heroku\",\n\t\"Netlify\",\n\t\"Vercel\",\n\t\"Firebase\",\n\t\"Java\",\n\t\"Spring Boot\",\n\t\"C#\",\n\t\"Python\",\n\t\"Django\",\n\t\"Flask\",\n\t\"Ruby\",\n\t\"PHP\",\n\t\"Perl\",\n\t\"Go\",\n\t\"Swift\",\n\t\"Rust\",\n\t\"Dart\",\n\t\"Kotlin\",\n\t\"Flutter\",\n];\n"],"names":[],"mappings":";;;AAAO,MAAM,aAAa;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/futuzor/Documentos/JavaScript/React/NextJS/dev-talent-showcase/data/mockDeveloperData.ts"],"sourcesContent":["import { type DeveloperInfo } from \"@/types/types\";\n\nconst developersData: DeveloperInfo[] = [\n\t{\n\t\tid: \"1\",\n\t\tname: \"Alex\",\n\t\tsurname: \"Johnson\",\n\t\ttitle: \"Full Stack Developer\",\n\t\tcountry: \"USA\",\n\t\tstate: \"Texas\",\n\t\tcity: \"San Francisco\",\n\t\tmemberSince: \"3/5/2025\",\n\t\tavatar:\n\t\t\t\"https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&w=600\",\n\t\tbannerImage:\n\t\t\t\"https://images.pexels.com/photos/546819/pexels-photo-546819.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\",\n\t\tskills: {\n\t\t\tfrontend: [\"React\", \"Next.js\", \"Redux\", \"TypeScript\"],\n\t\t\tbackend: [\"Node.js\", \"Express.js\", \"MongoDB\", \"GraphQL\"],\n\t\t\tother: [\"AWS\", \"Jest\"],\n\t\t},\n\t\treviews: 28,\n\t\tfollowers: 100,\n\t\tavailability: \"Freelance\",\n\t\tbio: \"Full stack developer with 5+ years of experience building scalable web applications. I specialize in React, Node.js, and cloud architecture. I'm passionate about creating clean, maintainable code and delivering exceptional user experiences.\",\n\t\temail: \"alexjohnson@gmail.com\",\n\t\tfreelancer: { hourlyRate: \"85\" },\n\t\tlanguages: [\"English (Native)\", \"Spanish (Conversational)\"],\n\t\tworkExperience: [\n\t\t\t{\n\t\t\t\ttitle: \"Senior Software Engineer\",\n\t\t\t\tcompany: \"TechCorp\",\n\t\t\t\tlocation: \"Remote\",\n\t\t\t\tstartDate: \"Jan 2020\",\n\t\t\t\tendDate: \"Present\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"+ Led development of customer-facing applications with React and Node.js.\\n+ Implemented CI/CD pipelines and microservices architecture.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Full Stack Developer\",\n\t\t\t\tcompany: \"InnovateSoft\",\n\t\t\t\tlocation: \"San Francisco, CA\",\n\t\t\t\tstartDate: \"Mar 2018\",\n\t\t\t\tendDate: \"Dec 2019\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"+ Developed and maintained web applications for enterprise clients.\\n+ Collaborated with design team to implement responsive UIs.\",\n\t\t\t},\n\t\t],\n\t\tsocial: {\n\t\t\tgithub: \"https://github.com\",\n\t\t\tlinkedin: \"https://linkedin.com\",\n\t\t\ttwitter: \"https://twitter.com\",\n\t\t\tportfolio: \"https://alexjohnson.dev\",\n\t\t},\n\t},\n\t{\n\t\tid: \"2\",\n\t\tname: \"Samantha\",\n\t\tsurname: \"Chen\",\n\t\ttitle: \"Frontend Developer\",\n\t\tcountry: \"USA\",\n\t\tstate: \"Texas\",\n\t\tcity: \"New York, NY\",\n\t\tbio: \"Frontend developer with 10+ years of experience building responsive and accessible web applications. I specialize in React, TypeScript, and design systems. I'm passionate about creating user-friendly interfaces and delivering exceptional user experiences.\",\n\t\tavatar:\n\t\t\t\"https://images.pexels.com/photos/774909/pexels-photo-774909.jpeg?auto=compress&cs=tinysrgb&w=600\",\n\t\tmemberSince: \"5/5/2025\",\n\t\tbannerImage:\n\t\t\t\"https://images.pexels.com/photos/943096/pexels-photo-943096.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\",\n\t\tskills: {\n\t\t\tfrontend: [\"React\", \"Vue.js\", \"JavaScript\", \"CSS/SASS\"],\n\t\t\tbackend: [],\n\t\t\tother: [],\n\t\t},\n\t\tfreelancer: false,\n\t\tworkExperience: [\n\t\t\t{\n\t\t\t\ttitle: \"Senior Frontend Developer\",\n\t\t\t\tcompany: \"InnovateTech Solutions\",\n\t\t\t\tlocation: \"San Francisco, CA\",\n\t\t\t\tstartDate: \"2022-03-01\",\n\t\t\t\tendDate: \"Present\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"+ Led the development of scalable and responsive user interfaces for key web applications using React.js, Next.js, and TypeScript.\\n+ Implemented component-based architectures and optimized rendering performance, resulting in a 20% improvement in page load times.\\n+ Mentored junior developers and conducted code reviews to ensure high code quality and adherence to best practices.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Frontend Developer\",\n\t\t\t\tcompany: \"WebSpark Digital\",\n\t\t\t\tlocation: \"Austin, TX\",\n\t\t\t\tstartDate: \"2019-06-15\",\n\t\t\t\tendDate: \"2022-02-28\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"+ Developed and maintained interactive web applications using Angular and Vue.js.\\n+ Collaborated closely with UX/UI designers to translate wireframes and mockups into functional user interfaces.\\n+ Contributed to the design system and ensured cross-browser compatibility and accessibility standards.\",\n\t\t\t},\n\t\t],\n\t\tfollowers: 620,\n\t\treviews: 16,\n\t\tavailability: \"Full-time\",\n\t\temail: \"samanthachen@gmail.com\",\n\t\tlanguages: [\"English (Native)\"],\n\t\tsocial: {\n\t\t\tgithub: \"https://github.com\",\n\t\t\tlinkedin: \"https://linkedin.com\",\n\t\t\ttwitter: \"https://twitter.com\",\n\t\t\tportfolio: \"https://samanthachen.dev\",\n\t\t},\n\t},\n\t{\n\t\tid: \"3\",\n\t\tbio: \"Mobile developer with 10+ years of experience building cross-platform mobile applications. I specialize in React Native, Kotlin, and Swift. I'm passionate about creating user-friendly interfaces and delivering exceptional user experiences.\",\n\t\tname: \"David\",\n\t\tsurname: \"Martinez\",\n\t\ttitle: \"Mobile Developer\",\n\t\tcountry: \"USA\",\n\t\tstate: \"Texas\",\n\t\tcity: \"Austin, TX\",\n\t\tmemberSince: \"3/6/2025\",\n\t\tavatar:\n\t\t\t\"https://images.pexels.com/photos/2379004/pexels-photo-2379004.jpeg?auto=compress&cs=tinysrgb&w=600\",\n\t\tbannerImage:\n\t\t\t\"https://images.pexels.com/photos/1181271/pexels-photo-1181271.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\",\n\t\tlanguages: [\"English (Native)\"],\n\t\tskills: {\n\t\t\tfrontend: [\"React Native\"],\n\t\t\tbackend: [],\n\t\t\tother: [\"Flutter\", \"Kotlin\", \"Swift\"],\n\t\t},\n\t\tfollowers: 540,\n\t\treviews: 20,\n\t\tavailability: \"Full-time\",\n\t\tworkExperience: [\n\t\t\t{\n\t\t\t\ttitle: \"Lead Mobile Developer\",\n\t\t\t\tcompany: \"AppGenius Labs\",\n\t\t\t\tlocation: \"New York, NY\",\n\t\t\t\tstartDate: \"2023-01-01\",\n\t\t\t\tendDate: \"Present\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"+ Spearheaded the development and deployment of native iOS and Android applications using Swift, Kotlin, and React Native. \\n+ Managed a team of 4 mobile developers, overseeing project timelines and ensuring high-quality code delivery.\\n+ Implemented advanced features such as real-time data synchronization, offline capabilities, and push notifications.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Mobile Developer\",\n\n\t\t\t\tcompany: \"MobileFirst Innovations\",\n\t\t\t\tlocation: \"Seattle, WA\",\n\t\t\t\tstartDate: \"2020-09-01\",\n\t\t\t\tendDate: \"2022-12-31\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"+ Developed and maintained mobile applications for both iOS and Android platforms.\\n+ Utilized Objective-C and Java for native development and gained experience with Flutter for cross-platform solutions.\\n+ Integrated third-party APIs and ensured optimal performance and user experience.\",\n\t\t\t},\n\t\t],\n\t\tfreelancer: false,\n\t\temail: \"davidmartinez@gmail.com\",\n\t\tsocial: {\n\t\t\tgithub: \"https://github.com\",\n\t\t\tlinkedin: \"https://linkedin.com\",\n\t\t\ttwitter: \"https://twitter.com\",\n\t\t\tportfolio: \"https://davidmartinez.dev\",\n\t\t},\n\t},\n\t{\n\t\tid: \"4\",\n\t\tname: \"Mira\",\n\t\tsurname: \"Patel\",\n\t\tbio: \"Backend developer with 10+ years of experience building scalable web applications. I specialize in Python, Django, PostgreSQL, and AWS. I'm passionate about creating efficient and reliable backend systems.\",\n\t\ttitle: \"Backend Developer\",\n\t\tcountry: \"USA\",\n\t\tstate: \"Washington\",\n\t\tcity: \"Seattle, WA\",\n\t\temail: \"mirapatel@gmail.com\",\n\t\tlanguages: [\"English (Native)\"],\n\t\tmemberSince: \"4/4/2025\",\n\t\tavatar:\n\t\t\t\"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&w=600\",\n\t\tbannerImage:\n\t\t\t\"https://images.pexels.com/photos/326501/pexels-photo-326501.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\",\n\t\tworkExperience: [\n\t\t\t{\n\t\t\t\ttitle: \"Staff Backend Engineer\",\n\t\t\t\tcompany: \"GlobalData Solutions\",\n\t\t\t\tlocation: \"London, UK\",\n\t\t\t\tstartDate: \"2022-07-01\",\n\t\t\t\tendDate: \"Present\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"+ Designed and implemented robust and scalable backend services using Python (Django, Flask) and Go.\\n+ Developed RESTful APIs and microservices architectures to support high-traffic web applications.\\n+ Optimized database queries and managed PostgreSQL and MongoDB databases, resulting in significant performance improvements.\\n+ Led the migration of legacy systems to modern cloud-based solutions (AWS).\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Backend Developer\",\n\t\t\t\tcompany: \"CodeCraft Technologies\",\n\t\t\t\tlocation: \"Bengaluru, India\",\n\t\t\t\tstartDate: \"2019-01-10\",\n\t\t\t\tendDate: \"2022-06-30\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"+ Built and maintained backend services for various web applications using Node.js and Java (Spring Boot).\\n+ Developed and consumed APIs, handled data persistence with MySQL, and implemented authentication and authorization mechanisms.\\n+ Collaborated with frontend teams to define API specifications and troubleshoot integration issues.\",\n\t\t\t},\n\t\t],\n\t\tfreelancer: false,\n\t\tskills: {\n\t\t\tfrontend: [],\n\t\t\tbackend: [\"Python\", \"Django\", \"PostgreSQL\", \"AWS\"],\n\t\t\tother: [],\n\t\t},\n\t\tfollowers: 250,\n\t\treviews: 31,\n\t\tavailability: \"Full-time\",\n\t\tsocial: {\n\t\t\tgithub: \"https://github.com\",\n\t\t\tlinkedin: \"https://linkedin.com\",\n\t\t\ttwitter: \"https://twitter.com\",\n\t\t\tportfolio: \"https://mirapatel.dev\",\n\t\t},\n\t},\n\t{\n\t\tid: \"dev-jw001\",\n\t\tname: \"James\",\n\t\tsurname: \"Wilson\",\n\t\ttitle: \"DevOps Engineer\",\n\t\tcountry: \"USA\",\n\t\tstate: \"Illinois\",\n\t\tcity: \"Chicago\",\n\t\tmemberSince: \"2021-03-15\",\n\t\tavatar: \"https://randomuser.me/api/portraits/men/75.jpg\",\n\t\tbannerImage: \"https://source.unsplash.com/random/1200x400/?devops,cloud\",\n\t\tskills: {\n\t\t\tfrontend: [],\n\t\t\tbackend: [],\n\t\t\tother: [\n\t\t\t\t\"AWS\",\n\t\t\t\t\"Azure\",\n\t\t\t\t\"GCP\",\n\t\t\t\t\"Kubernetes\",\n\t\t\t\t\"Docker\",\n\t\t\t\t\"Terraform\",\n\t\t\t\t\"Ansible\",\n\t\t\t\t\"Jenkins\",\n\t\t\t\t\"GitLab CI/CD\",\n\t\t\t\t\"Prometheus\",\n\t\t\t\t\"Grafana\",\n\t\t\t\t\"Python\",\n\t\t\t\t\"Bash\",\n\t\t\t\t\"Linux\",\n\t\t\t\t\"Networking\",\n\t\t\t\t\"Security\",\n\t\t\t],\n\t\t},\n\t\treviews: 45,\n\t\tfollowers: 120,\n\t\tavailability: \"Freelance\",\n\t\tbio: \"Experienced DevOps Engineer with a passion for building scalable, reliable, and secure infrastructure. Proven ability to implement CI/CD pipelines, automate deployments, and optimize cloud resources across various platforms. Always looking for new challenges and opportunities to leverage cutting-edge technologies to drive efficiency and innovation.\",\n\t\temail: \"james.wilson.devops@example.com\",\n\t\tfreelancer: {\n\t\t\thourlyRate: \"90\",\n\t\t},\n\t\tworkExperience: [\n\t\t\t{\n\t\t\t\ttitle: \"Senior DevOps Engineer\",\n\t\t\t\tcompany: \"Tech Solutions Inc.\",\n\t\t\t\tlocation: \"Chicago, IL\",\n\t\t\t\tstartDate: \"2023-01-01\",\n\t\t\t\tendDate: \"Present\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Led the migration of on-premise infrastructure to AWS, reducing operational costs by 25%. Implemented a fully automated CI/CD pipeline using GitLab CI/CD, significantly accelerating release cycles. Mentored junior engineers on best practices for cloud infrastructure and automation.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"DevOps Engineer\",\n\t\t\t\tcompany: \"Innovate Systems\",\n\t\t\t\tlocation: \"Chicago, IL\",\n\t\t\t\tstartDate: \"2020-06-01\",\n\t\t\t\tendDate: \"2022-12-31\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Designed and maintained Kubernetes clusters for microservices architecture. Developed Ansible playbooks for configuration management and infrastructure provisioning. Monitored system performance and implemented alerting solutions using Prometheus and Grafana.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Cloud Administrator\",\n\t\t\t\tcompany: \"Global IT Services\",\n\t\t\t\tlocation: \"Remote\",\n\t\t\t\tstartDate: \"2018-09-01\",\n\t\t\t\tendDate: \"2020-05-31\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Managed and optimized cloud resources on Azure and GCP. Provided support for virtual machines, networking, and storage solutions. Assisted in incident response and troubleshooting production issues.\",\n\t\t\t},\n\t\t],\n\t\tlanguages: [\"English\", \"Spanish\"],\n\t\tsocial: {\n\t\t\tgithub: \"https://github.com/jameswilson-devops\",\n\t\t\tlinkedin: \"https://www.linkedin.com/in/jameswilsondevops\",\n\t\t\ttwitter: \"https://twitter.com/jamesw_devops\",\n\t\t},\n\t},\n\t{\n\t\tid: \"elena-rodriguez-uxui\",\n\t\tname: \"Elena\",\n\t\tsurname: \"Rodriguez\",\n\t\ttitle: \"Senior UX/UI Designer\",\n\t\tcountry: \"USA\",\n\t\tstate: \"Florida\",\n\t\tcity: \"Miami\",\n\t\tmemberSince: \"2020-03-15\",\n\t\tavatar: \"https://i.pravatar.cc/150?img=20\",\n\t\tbannerImage: \"https://source.unsplash.com/random/1200x400/?design,ui,ux\",\n\t\tskills: {\n\t\t\tfrontend: [\"HTML\", \"CSS\", \"JavaScript (Basic)\", \"React (Familiarity)\"],\n\t\t\tbackend: [],\n\t\t\tother: [\n\t\t\t\t\"Figma\",\n\t\t\t\t\"Sketch\",\n\t\t\t\t\"Adobe XD\",\n\t\t\t\t\"User Research\",\n\t\t\t\t\"Wireframing\",\n\t\t\t\t\"Prototyping\",\n\t\t\t\t\"Usability Testing\",\n\t\t\t\t\"Information Architecture\",\n\t\t\t\t\"Interaction Design\",\n\t\t\t\t\"Visual Design\",\n\t\t\t\t\"Design Systems\",\n\t\t\t\t\"Agile Methodologies\",\n\t\t\t],\n\t\t},\n\t\treviews: 125,\n\t\tfollowers: 789,\n\t\tavailability: \"Freelance\",\n\t\tbio: \"Passionate and detail-oriented Senior UX/UI Designer with 7+ years of experience crafting intuitive and engaging digital experiences. I thrive on solving complex user problems through thoughtful design, from initial research to final implementation. My focus is on creating user-centered solutions that align with business goals and delight users.\",\n\t\temail: \"elena.rodriguez.design@example.com\",\n\t\tfreelancer: {\n\t\t\thourlyRate: \"90\",\n\t\t},\n\t\tworkExperience: [\n\t\t\t{\n\t\t\t\ttitle: \"Senior UX/UI Designer\",\n\t\t\t\tcompany: \"Tech Innovations Inc.\",\n\t\t\t\tlocation: \"Miami, FL\",\n\t\t\t\tstartDate: \"2022-01-10\",\n\t\t\t\tendDate: \"Present\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Led end-to-end UX/UI design for multiple SaaS products, from conceptualization to launch. Conducted extensive user research, created wireframes, prototypes, and high-fidelity mockups. Collaborated closely with product managers and engineers to ensure design feasibility and successful implementation. Mentored junior designers.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"UX/UI Designer\",\n\t\t\t\tcompany: \"Digital Solutions Agency\",\n\t\t\t\tlocation: \"Remote\",\n\t\t\t\tstartDate: \"2018-06-01\",\n\t\t\t\tendDate: \"2021-12-31\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Designed user interfaces and experiences for a diverse range of clients across various industries. Performed usability testing, iterated designs based on feedback, and contributed to the development of design guidelines.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Junior Graphic Designer\",\n\t\t\t\tcompany: \"Creative Marketing Studio\",\n\t\t\t\tlocation: \"New York, NY\",\n\t\t\t\tstartDate: \"2016-09-01\",\n\t\t\t\tendDate: \"2018-05-31\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Assisted with visual design for marketing materials, website layouts, and social media campaigns. Gained foundational knowledge in design principles and software.\",\n\t\t\t},\n\t\t],\n\t\tlanguages: [\"English (Native)\", \"Spanish (Fluent)\"],\n\t\tsocial: {\n\t\t\tgithub: \"https://github.com/ElenaRodriguezDesign\",\n\t\t\tlinkedin: \"https://www.linkedin.com/in/elenarodriguezuxui\",\n\t\t\tportfolio: \"https://www.elenarodriguezdesign.com\",\n\t\t},\n\t},\n\t{\n\t\tid: \"dev-tk001\",\n\t\tname: \"Terry\",\n\t\tsurname: \"Kim\",\n\t\ttitle: \"Staff Data Engineer\",\n\t\tcountry: \"USA\",\n\t\tstate: \"MA\",\n\t\tcity: \"Boston\",\n\t\tmemberSince: \"2018-03-15\",\n\t\tavatar: \"https://i.pravatar.cc/150?img=68\",\n\t\tbannerImage:\n\t\t\t\"https://source.unsplash.com/random/1200x400/?data-engineering,tech\",\n\t\tskills: {\n\t\t\tfrontend: [],\n\t\t\tbackend: [\n\t\t\t\t\"Python\",\n\t\t\t\t\"Java\",\n\t\t\t\t\"Scala\",\n\t\t\t\t\"SQL\",\n\t\t\t\t\"Spark\",\n\t\t\t\t\"Hadoop\",\n\t\t\t\t\"Kafka\",\n\t\t\t\t\"Airflow\",\n\t\t\t\t\"AWS (S3, Redshift, Glue, EMR, Lambda)\",\n\t\t\t\t\"GCP (BigQuery, Dataflow, Dataproc)\",\n\t\t\t\t\"Snowflake\",\n\t\t\t\t\"Delta Lake\",\n\t\t\t\t\"Kubernetes\",\n\t\t\t\t\"Docker\",\n\t\t\t\t\"ETL\",\n\t\t\t\t\"Data Warehousing\",\n\t\t\t\t\"Data Modeling\",\n\t\t\t\t\"CI/CD\",\n\t\t\t],\n\t\t\tother: [\n\t\t\t\t\"Machine Learning Engineering\",\n\t\t\t\t\"Cloud Architecture\",\n\t\t\t\t\"Big Data Analytics\",\n\t\t\t\t\"Data Governance\",\n\t\t\t\t\"Performance Optimization\",\n\t\t\t],\n\t\t},\n\t\treviews: 87,\n\t\tfollowers: 1200,\n\t\tavailability: \"Freelance\",\n\t\tbio: \"Experienced and results-driven Staff Data Engineer with a passion for building scalable, robust, and efficient data pipelines and platforms. Proven track record of designing, developing, and deploying end-to-end data solutions in various cloud environments (AWS, GCP). Adept at transforming complex business requirements into high-performance data architectures that enable advanced analytics and machine learning initiatives.\",\n\t\temail: \"terry.kim@example.com\",\n\t\tfreelancer: {\n\t\t\thourlyRate: \"150\",\n\t\t},\n\t\tworkExperience: [\n\t\t\t{\n\t\t\t\ttitle: \"Staff Data Engineer\",\n\t\t\t\tcompany: \"Innovate Analytics\",\n\t\t\t\tlocation: \"Boston, MA\",\n\t\t\t\tstartDate: \"2022-01-10\",\n\t\t\t\tendDate: \"Present\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Led the design and implementation of a real-time data streaming platform using Kafka and Spark Structured Streaming. Optimized existing ETL processes, reducing data processing time by 40%. Mentored junior data engineers and established best practices for data governance and quality.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Senior Data Engineer\",\n\t\t\t\tcompany: \"Tech Solutions Inc.\",\n\t\t\t\tlocation: \"Boston, MA\",\n\t\t\t\tstartDate: \"2019-06-01\",\n\t\t\t\tendDate: \"2021-12-31\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Developed and maintained scalable data warehouses on AWS Redshift and Snowflake. Built automated data pipelines using Airflow and AWS Glue for various business units. Collaborated with data scientists to deploy machine learning models into production environments.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Data Engineer\",\n\t\t\t\tcompany: \"DataCorp\",\n\t\t\t\tlocation: \"New York, NY\",\n\t\t\t\tstartDate: \"2017-08-01\",\n\t\t\t\tendDate: \"2019-05-31\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Designed and implemented ETL solutions for ingesting large datasets from diverse sources. Assisted in migrating on-premise data infrastructure to Google Cloud Platform. Performed data quality checks and resolved data discrepancies.\",\n\t\t\t},\n\t\t],\n\t\tlanguages: [\"English (Native)\", \"Korean (Fluent)\"],\n\t\tsocial: {\n\t\t\tgithub: \"https://github.com/terrykimdata\",\n\t\t\tlinkedin: \"https://www.linkedin.com/in/terrykimdataengineer\",\n\t\t\ttwitter: \"https://twitter.com/terrykim_data\",\n\t\t},\n\t},\n\t{\n\t\tid: \"olivia-thomas-sec-eng-denver\",\n\t\tname: \"Olivia\",\n\t\tsurname: \"Thomas\",\n\t\ttitle: \"Senior Security Engineer\",\n\t\tcountry: \"USA\",\n\t\tstate: \"Colorado\",\n\t\tcity: \"Denver\",\n\t\tmemberSince: \"2018-03-15\",\n\t\tavatar: \"https://randomuser.me/api/portraits/women/68.jpg\",\n\t\tbannerImage:\n\t\t\t\"https://images.unsplash.com/photo-1510511459019-5be710b12757?q=80&w=2940&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n\t\tskills: {\n\t\t\tfrontend: [],\n\t\t\tbackend: [\"Python\", \"Go\", \"Java\", \"Node.js\"],\n\t\t\tother: [\n\t\t\t\t\"Cloud Security (AWS, Azure, GCP)\",\n\t\t\t\t\"Network Security\",\n\t\t\t\t\"Application Security (SAST, DAST)\",\n\t\t\t\t\"Identity and Access Management (IAM)\",\n\t\t\t\t\"Security Information and Event Management (SIEM)\",\n\t\t\t\t\"Incident Response\",\n\t\t\t\t\"Vulnerability Management\",\n\t\t\t\t\"Penetration Testing\",\n\t\t\t\t\"Cryptography\",\n\t\t\t\t\"DevSecOps\",\n\t\t\t\t\"Kubernetes Security\",\n\t\t\t\t\"Container Security\",\n\t\t\t\t\"Threat Modeling\",\n\t\t\t\t\"Risk Assessment\",\n\t\t\t\t\"Compliance (GDPR, HIPAA, SOC 2)\",\n\t\t\t],\n\t\t},\n\t\treviews: 48,\n\t\tfollowers: 756,\n\t\tavailability: \"Freelance\",\n\t\tbio: \"Experienced and results-driven Senior Security Engineer with a passion for building robust and secure systems. Specializing in cloud security, application security, and incident response, I thrive on identifying and mitigating complex threats. Committed to staying ahead of emerging security trends and fostering a security-first culture.\",\n\t\temail: \"olivia.thomas@example.com\",\n\t\tfreelancer: {\n\t\t\thourlyRate: \"150\",\n\t\t},\n\t\tworkExperience: [\n\t\t\t{\n\t\t\t\ttitle: \"Senior Security Engineer\",\n\t\t\t\tcompany: \"SecureBytes Inc.\",\n\t\t\t\tlocation: \"Denver, CO\",\n\t\t\t\tstartDate: \"2022-01-01\",\n\t\t\t\tendDate: \"Present\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Led the development and implementation of cloud security strategies (AWS, Azure). Designed and managed IAM policies, network security controls, and data encryption solutions. Conducted regular security audits and vulnerability assessments. Mentored junior security engineers.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Security Engineer\",\n\t\t\t\tcompany: \"TechGuard Solutions\",\n\t\t\t\tlocation: \"Remote\",\n\t\t\t\tstartDate: \"2019-06-01\",\n\t\t\t\tendDate: \"2021-12-31\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Responsible for application security testing (SAST/DAST) and identifying security flaws in web and mobile applications. Assisted in incident response activities and forensic investigations. Developed security awareness training materials for developers.\",\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Junior Security Analyst\",\n\t\t\t\tcompany: \"CyberShield Co.\",\n\t\t\t\tlocation: \"Denver, CO\",\n\t\t\t\tstartDate: \"2017-09-01\",\n\t\t\t\tendDate: \"2019-05-31\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Monitored SIEM alerts, investigated security incidents, and contributed to security policy documentation. Performed basic vulnerability scans and assisted with patch management.\",\n\t\t\t},\n\t\t],\n\t\tlanguages: [\"English (Native)\", \"Spanish (Conversational)\"],\n\t\tsocial: {\n\t\t\tgithub: \"https://github.com/oliviathomas-sec\",\n\t\t\tlinkedin: \"https://www.linkedin.com/in/oliviathomas-security\",\n\t\t\ttwitter: \"https://twitter.com/oliviathomas_sec\",\n\t\t\tportfolio: \"https://www.oliviathomas-security.com\",\n\t\t},\n\t},\n];\n\nexport default developersData;\n"],"names":[],"mappings":";;;AAEA,MAAM,iBAAkC;IACvC;QACC,IAAI;QACJ,MAAM;QACN,SAAS;QACT,OAAO;QACP,SAAS;QACT,OAAO;QACP,MAAM;QACN,aAAa;QACb,QACC;QACD,aACC;QACD,QAAQ;YACP,UAAU;gBAAC;gBAAS;gBAAW;gBAAS;aAAa;YACrD,SAAS;gBAAC;gBAAW;gBAAc;gBAAW;aAAU;YACxD,OAAO;gBAAC;gBAAO;aAAO;QACvB;QACA,SAAS;QACT,WAAW;QACX,cAAc;QACd,KAAK;QACL,OAAO;QACP,YAAY;YAAE,YAAY;QAAK;QAC/B,WAAW;YAAC;YAAoB;SAA2B;QAC3D,gBAAgB;YACf;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;YACA;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;SACA;QACD,QAAQ;YACP,QAAQ;YACR,UAAU;YACV,SAAS;YACT,WAAW;QACZ;IACD;IACA;QACC,IAAI;QACJ,MAAM;QACN,SAAS;QACT,OAAO;QACP,SAAS;QACT,OAAO;QACP,MAAM;QACN,KAAK;QACL,QACC;QACD,aAAa;QACb,aACC;QACD,QAAQ;YACP,UAAU;gBAAC;gBAAS;gBAAU;gBAAc;aAAW;YACvD,SAAS,EAAE;YACX,OAAO,EAAE;QACV;QACA,YAAY;QACZ,gBAAgB;YACf;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;YACA;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;SACA;QACD,WAAW;QACX,SAAS;QACT,cAAc;QACd,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,QAAQ;YACP,QAAQ;YACR,UAAU;YACV,SAAS;YACT,WAAW;QACZ;IACD;IACA;QACC,IAAI;QACJ,KAAK;QACL,MAAM;QACN,SAAS;QACT,OAAO;QACP,SAAS;QACT,OAAO;QACP,MAAM;QACN,aAAa;QACb,QACC;QACD,aACC;QACD,WAAW;YAAC;SAAmB;QAC/B,QAAQ;YACP,UAAU;gBAAC;aAAe;YAC1B,SAAS,EAAE;YACX,OAAO;gBAAC;gBAAW;gBAAU;aAAQ;QACtC;QACA,WAAW;QACX,SAAS;QACT,cAAc;QACd,gBAAgB;YACf;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;YACA;gBACC,OAAO;gBAEP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;SACA;QACD,YAAY;QACZ,OAAO;QACP,QAAQ;YACP,QAAQ;YACR,UAAU;YACV,SAAS;YACT,WAAW;QACZ;IACD;IACA;QACC,IAAI;QACJ,MAAM;QACN,SAAS;QACT,KAAK;QACL,OAAO;QACP,SAAS;QACT,OAAO;QACP,MAAM;QACN,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,aAAa;QACb,QACC;QACD,aACC;QACD,gBAAgB;YACf;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;YACA;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;SACA;QACD,YAAY;QACZ,QAAQ;YACP,UAAU,EAAE;YACZ,SAAS;gBAAC;gBAAU;gBAAU;gBAAc;aAAM;YAClD,OAAO,EAAE;QACV;QACA,WAAW;QACX,SAAS;QACT,cAAc;QACd,QAAQ;YACP,QAAQ;YACR,UAAU;YACV,SAAS;YACT,WAAW;QACZ;IACD;IACA;QACC,IAAI;QACJ,MAAM;QACN,SAAS;QACT,OAAO;QACP,SAAS;QACT,OAAO;QACP,MAAM;QACN,aAAa;QACb,QAAQ;QACR,aAAa;QACb,QAAQ;YACP,UAAU,EAAE;YACZ,SAAS,EAAE;YACX,OAAO;gBACN;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACA;QACF;QACA,SAAS;QACT,WAAW;QACX,cAAc;QACd,KAAK;QACL,OAAO;QACP,YAAY;YACX,YAAY;QACb;QACA,gBAAgB;YACf;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;YACA;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;YACA;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;SACA;QACD,WAAW;YAAC;YAAW;SAAU;QACjC,QAAQ;YACP,QAAQ;YACR,UAAU;YACV,SAAS;QACV;IACD;IACA;QACC,IAAI;QACJ,MAAM;QACN,SAAS;QACT,OAAO;QACP,SAAS;QACT,OAAO;QACP,MAAM;QACN,aAAa;QACb,QAAQ;QACR,aAAa;QACb,QAAQ;YACP,UAAU;gBAAC;gBAAQ;gBAAO;gBAAsB;aAAsB;YACtE,SAAS,EAAE;YACX,OAAO;gBACN;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACA;QACF;QACA,SAAS;QACT,WAAW;QACX,cAAc;QACd,KAAK;QACL,OAAO;QACP,YAAY;YACX,YAAY;QACb;QACA,gBAAgB;YACf;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;YACA;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;YACA;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;SACA;QACD,WAAW;YAAC;YAAoB;SAAmB;QACnD,QAAQ;YACP,QAAQ;YACR,UAAU;YACV,WAAW;QACZ;IACD;IACA;QACC,IAAI;QACJ,MAAM;QACN,SAAS;QACT,OAAO;QACP,SAAS;QACT,OAAO;QACP,MAAM;QACN,aAAa;QACb,QAAQ;QACR,aACC;QACD,QAAQ;YACP,UAAU,EAAE;YACZ,SAAS;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACA;YACD,OAAO;gBACN;gBACA;gBACA;gBACA;gBACA;aACA;QACF;QACA,SAAS;QACT,WAAW;QACX,cAAc;QACd,KAAK;QACL,OAAO;QACP,YAAY;YACX,YAAY;QACb;QACA,gBAAgB;YACf;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;YACA;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;YACA;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;SACA;QACD,WAAW;YAAC;YAAoB;SAAkB;QAClD,QAAQ;YACP,QAAQ;YACR,UAAU;YACV,SAAS;QACV;IACD;IACA;QACC,IAAI;QACJ,MAAM;QACN,SAAS;QACT,OAAO;QACP,SAAS;QACT,OAAO;QACP,MAAM;QACN,aAAa;QACb,QAAQ;QACR,aACC;QACD,QAAQ;YACP,UAAU,EAAE;YACZ,SAAS;gBAAC;gBAAU;gBAAM;gBAAQ;aAAU;YAC5C,OAAO;gBACN;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACA;QACF;QACA,SAAS;QACT,WAAW;QACX,cAAc;QACd,KAAK;QACL,OAAO;QACP,YAAY;YACX,YAAY;QACb;QACA,gBAAgB;YACf;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;YACA;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;YACA;gBACC,OAAO;gBACP,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,aACC;YACF;SACA;QACD,WAAW;YAAC;YAAoB;SAA2B;QAC3D,QAAQ;YACP,QAAQ;YACR,UAAU;YACV,SAAS;YACT,WAAW;QACZ;IACD;CACA;uCAEc","debugId":null}},
    {"offset": {"line": 624, "column": 0}, "map": {"version":3,"sources":["file:///home/futuzor/Documentos/JavaScript/React/NextJS/dev-talent-showcase/services/developers/getAllSkills.ts"],"sourcesContent":["import { SkillsInfo } from \"@/types/types\";\n\nexport const getAllSkills = (skills: SkillsInfo): string[] => {\n    return [...skills.frontend, ...skills.backend, ...skills.other];\n};\n"],"names":[],"mappings":";;;AAEO,MAAM,eAAe,CAAC;IACzB,OAAO;WAAI,OAAO,QAAQ;WAAK,OAAO,OAAO;WAAK,OAAO,KAAK;KAAC;AACnE","debugId":null}},
    {"offset": {"line": 643, "column": 0}, "map": {"version":3,"sources":["file:///home/futuzor/Documentos/JavaScript/React/NextJS/dev-talent-showcase/components/ui/GridDeveloperCard.tsx"],"sourcesContent":["import { DeveloperInfo } from \"@/types/types\";\nimport {\n    Avatar,\n    CardContent,\n    IconButton,\n    Link,\n    Stack,\n    Typography,\n    Tooltip,\n    Grid,\n    Box,\n    AspectRatio,\n    Card,\n    CardOverflow,\n    Chip,\n} from \"@mui/joy\";\nimport { motion } from \"motion/react\";\nimport Image from \"next/image\";\nimport { getAllSkills } from \"@/services/developers/getAllSkills\";\nimport { Heart, MapPin, Briefcase, MessageCircle } from \"lucide-react\";\n\nconst GridDeveloperCard = ({\n    developer,\n    index,\n    toggleLike,\n    isLiked,\n}: {\n    developer: DeveloperInfo;\n    index: number;\n    toggleLike: (id: string) => void;\n    isLiked: boolean;\n}) => {\n    return (\n        <Grid xs={12} sm={6} md={4} lg={4} xl={4}>\n            <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{\n                    duration: 0.5,\n                    delay: index * 0.1,\n                }}\n                viewport={{ once: true }}\n            >\n                <Card\n                    variant=\"outlined\"\n                    sx={{\n                        height: \"100%\",\n                        overflow: \"hidden\",\n                        transition: \"all 0.3s ease\",\n                        \"&:hover\": {\n                            boxShadow: \"md\",\n                            transform: \"translateY(-5px)\",\n                        },\n                    }}\n                >\n                    <CardOverflow>\n                        <AspectRatio ratio=\"21/9\">\n                            <object\n                                type=\"image/webp\"\n                                data={developer.bannerImage}\n                                width=\"1920\"\n                                height=\"1080\"\n                                aria-label=\"Background image\"\n                            >\n                                <Image\n                                    // @ts-ignore\n                                    src={\"/empty.webp\"}\n                                    alt={`${developer.name} ${developer.surname}'s background image`}\n                                    style={{ objectFit: \"cover\" }}\n                                    width={512}\n                                    height={512}\n                                    priority\n                                    decoding=\"async\"\n                                />\n                            </object>\n                        </AspectRatio>\n                        <Box\n                            sx={{\n                                position: \"absolute\",\n                                top: 12,\n                                right: 12,\n                                display: \"flex\",\n                                gap: 1,\n                            }}\n                        >\n                            {(developer.availability === \"Freelance\" ||\n                                developer.availability === \"Full-time\") && (\n                                <Chip\n                                    variant=\"soft\"\n                                    size=\"sm\"\n                                    color=\"success\"\n                                    sx={{\n                                        borderRadius: \"10rem\",\n                                        px: 1,\n                                    }}\n                                >\n                                    Available\n                                </Chip>\n                            )}\n                        </Box>\n                    </CardOverflow>\n\n                    <CardContent sx={{ gap: 1.5 }}>\n                        <Box\n                            sx={{\n                                display: \"flex\",\n                                alignItems: \"flex-end\",\n                                justifyContent: \"space-between\",\n                            }}\n                        >\n                            <Avatar\n                                src={developer.avatar}\n                                alt={`${developer.name} ${developer.surname}'s photo`}\n                                href={`/developer/${developer.id}`}\n                                component={Link}\n                                aria-label={`Go to ${developer.name} ${developer.surname}'s profile`}\n                                size=\"sm\"\n                                sx={{\n                                    width: 64,\n                                    height: 64,\n                                }}\n                            />\n                            <Box sx={{ display: \"flex\", gap: 1 }}>\n                                <IconButton\n                                    variant=\"soft\"\n                                    size=\"sm\"\n                                    onClick={() => toggleLike(developer.id)}\n                                    aria-label=\"Like\"\n                                >\n                                    <Tooltip title={isLiked ? \"Unlike\" : \"Like\"} variant=\"solid\" arrow>\n                                        <Heart size={20} fill={isLiked ? \"red\" : \"none\"} stroke={isLiked ? \"red\" : \"currentColor\"} />\n                                    </Tooltip>\n                                </IconButton>\n                                <IconButton\n                                    component={Link}\n                                    href={`/message/${developer.id}`}\n                                    variant=\"soft\"\n                                    aria-label=\"Send message\"\n                                    size=\"sm\"\n                                >\n                                    <Tooltip\n                                        title=\"Send message\"\n                                        variant=\"solid\"\n                                        arrow\n                                    >\n                                        <MessageCircle size={19} />\n                                    </Tooltip>\n                                </IconButton>\n                            </Box>\n                        </Box>\n\n                        <Box>\n                            <Link\n                                href={`/developer/${developer.id}`}\n                                aria-label={`Go to ${developer.name} ${developer.surname}'s profile`}\n                                level=\"title-lg\"\n                                fontWeight={700}\n\t\t\t\t\t\t\t\tfontSize={\"1.25rem\"}\n                                textColor={\"text.primary\"}\n                            >\n                                {developer.name} {developer.surname}\n                            </Link>\n                            <Typography\n                                level=\"body-sm\"\n                                sx={{\n                                    color: \"text.primary\",\n                                }}\n                            >\n                                {developer.title}\n                            </Typography>\n                        </Box>\n\n                        <Box\n                            sx={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                gap: 1,\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <Typography\n                                level=\"body-sm\"\n                                sx={{\n                                    color: \"text.primary\",\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    gap: 0.75,\n                                }}\n                            >\n                                <MapPin stroke=\"currentColor\" strokeWidth={1} size={19} />\n                                {developer.city}\n                            </Typography>\n                            <Typography\n                                level=\"body-sm\"\n                                sx={{\n                                    color: \"text.primary\",\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    gap: 0.75,\n                                }}\n                            >\n                                <Briefcase stroke=\"currentColor\" strokeWidth={1} size={19} />\n                                {developer.availability}\n                            </Typography>\n                        </Box>\n\n                        <Stack\n                            direction=\"row\"\n                            flexWrap=\"wrap\"\n                            spacing={1}\n                            useFlexGap\n                            sx={{ horizontalGap: 0.5, verticalGap: 1 }}\n                        >\n                            {getAllSkills(developer.skills)\n                                .slice(0, 4)\n                                .map((skill: string) => (\n                                    <Chip key={skill} size=\"sm\" variant=\"soft\">\n                                        {skill}\n                                    </Chip>\n                                ))}\n\n                            {getAllSkills(developer.skills).length > 4 && (\n                                <Chip size=\"sm\" variant=\"soft\">\n                                    +{getAllSkills(developer.skills).length - 4}\n                                </Chip>\n                            )}\n                        </Stack>\n                    </CardContent>\n                </Card>\n            </motion.div>\n        </Grid>\n    );\n};\n\nexport default GridDeveloperCard;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1051, "column": 0}, "map": {"version":3,"sources":["file:///home/futuzor/Documentos/JavaScript/React/NextJS/dev-talent-showcase/components/ui/ListDeveloperCard.tsx"],"sourcesContent":["import { DeveloperInfo } from \"@/types/types\";\nimport { getAllSkills } from \"@/services/developers/getAllSkills\";\nimport {\n    Avatar,\n    Box,\n    Card,\n    CardContent,\n    Chip,\n    IconButton,\n    Link,\n    Stack,\n    Tooltip,\n    Typography,\n} from \"@mui/joy\";\nimport { Briefcase, Heart, MapPin, MessageCircle } from \"lucide-react\";\nimport { motion } from \"motion/react\";\n\nconst ListDeveloperCard = ({\n    developer,\n    index,\n    toggleLike,\n    isLiked,\n}: {\n    developer: DeveloperInfo;\n    index: number;\n    toggleLike: (id: string) => void;\n    isLiked: boolean;\n}) => {\n    return (\n        <motion.div\n            key={developer.id}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{\n                duration: 0.3,\n                delay: index * 0.05,\n            }}\n        >\n            <Card\n                variant=\"outlined\"\n                orientation=\"horizontal\"\n                sx={{\n                    gap: 2,\n                    flexDirection: {\n                        xs: \"column\",\n                        sm: \"row\",\n                    },\n                    transition: \"all 0.3s ease\",\n                    \"&:hover\": {\n                        boxShadow: \"md\",\n                        transform: \"translateY(-3px)\",\n                    },\n                }}\n            >\n                <Avatar\n                    src={developer.avatar}\n                    alt={developer.name}\n                    href={`/developer/${developer.id}`}\n                    component={Link}\n                    aria-label={`Go to ${developer.name} ${developer.surname}'s profile`}\n                    sx={{\n                        width: {\n                            xs: 96,\n                            md: 120,\n                        },\n                        height: {\n                            xs: 96,\n                            md: 120,\n                        },\n                    }}\n                />\n                <CardContent sx={{ gap: 1.5 }}>\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: {\n                                xs: \"column\",\n                                sm: \"row\",\n                            },\n                            justifyContent: \"space-between\",\n                            alignItems: {\n                                xs: \"flex-start\",\n                                sm: \"center\",\n                            },\n                            gap: { xs: 1, sm: 0 },\n                        }}\n                    >\n                        <Box>\n                            <Box\n                                sx={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    gap: 1,\n                                }}\n                            >\n                                <Typography level=\"title-lg\" fontWeight={700} fontSize={\"1.5rem\"}>\n                                    <Link\n                                        aria-label={`Go to ${developer.name} ${developer.surname} profile`}\n                                        href={`/developer/${developer.id}`}\n                                        sx={{ color: \"inherit\" }}\n                                    >\n                                        {`${developer.name} ${developer.surname}`}\n                                    </Link>\n                                </Typography>\n                                {(developer.availability === \"Freelance\" ||\n                                    developer.availability === \"Full-time\") && (\n                                    <Chip\n                                        variant=\"soft\"\n                                        size=\"sm\"\n                                        color=\"success\"\n                                        sx={{\n                                            fontSize: \"0.65rem\",\n                                            borderRadius: \"10rem\",\n                                        }}\n                                    >\n                                        Available\n                                    </Chip>\n                                )}\n                            </Box>\n                            <Typography\n                                level=\"body-md\"\n                                sx={{\n                                    color: \"text.secondary\",\n                                }}\n                            >\n                                {developer.title}\n                            </Typography>\n                        </Box>\n\n                        <Box\n                            sx={{\n                                display: \"flex\",\n                                gap: 1,\n                            }}\n                        >\n                            <Tooltip\n                                title={isLiked ? \"Unlike\" : \"Like\"}\n                                variant=\"solid\"\n                                arrow\n                            >\n                                <IconButton\n                                    variant=\"soft\"\n                                    size=\"sm\"\n                                    aria-label={isLiked ? \"Unlike\" : \"Like\"}\n                                    onClick={() => toggleLike(developer.id)}\n                                >\n                                    <Heart\n                                        size={16}\n\t\t\t\t\t\t\t\t\t\tstroke={isLiked ? \"red\" : \"currentColor\"}\n                                        fill={isLiked ? \"red\" : \"none\"}\n                                    />\n                                </IconButton>\n                            </Tooltip>\n                            <Tooltip title=\"Send message\" variant=\"solid\" arrow>\n                                <IconButton\n                                    component=\"a\"\n                                    href={`/message/${developer.id}`}\n                                    variant=\"soft\"\n                                    aria-label=\"Send message\"\n                                    size=\"sm\"\n                                >\n                                    <MessageCircle size={16} />\n                                </IconButton>\n                            </Tooltip>\n                        </Box>\n                    </Box>\n\n                    <Typography level=\"body-md\" textColor=\"text.primary\">\n                        {developer.bio}\n                    </Typography>\n\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            gap: 3,\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                gap: 1,\n                            }}\n                        >\n                            <MapPin size={19} />\n                            <Typography\n                                level=\"body-sm\"\n                                textColor=\"text.primary\"\n                            >\n                                {developer.city}\n                            </Typography>\n                        </Box>\n                        {/* <Box\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\talignItems:\n\t\t\t\t\t\t\t\t\t\"center\",\n\t\t\t\t\t\t\t\tgap: 1,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Briefcase size={14} />\n\t\t\t\t\t\t\t<Typography level=\"body-xs\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdeveloper.experience\n\t\t\t\t\t\t\t\t}{\" \"}\n\t\t\t\t\t\t\t\texperience\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box> */}\n                        <Box\n                            sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                gap: 1,\n                            }}\n                        >\n                            <Briefcase size={19} />\n                            <Typography\n                                level=\"body-sm\"\n                                textColor=\"text.primary\"\n                            >\n                                {developer.availability}\n                            </Typography>\n                        </Box>\n                    </Box>\n\n                    <Stack\n                        direction=\"row\"\n                        flexWrap=\"wrap\"\n                        spacing={1}\n                        useFlexGap\n                        sx={{ gap: 0.5 }}\n                    >\n                        {getAllSkills(developer.skills)\n                            .slice(0, 5)\n                            .map((skill) => (\n                                <Chip key={skill} size=\"sm\" variant=\"soft\">\n                                    {skill}\n                                </Chip>\n                            ))}\n                        {getAllSkills(developer.skills).length > 5 && (\n                            <Chip size=\"sm\" variant=\"soft\">\n                                +{getAllSkills(developer.skills).length - 5}\n                            </Chip>\n                        )}\n                    </Stack>\n                </CardContent>\n            </Card>\n        </motion.div>\n    );\n};\n\nexport default ListDeveloperCard;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1437, "column": 0}, "map": {"version":3,"sources":["file:///home/futuzor/Documentos/JavaScript/React/NextJS/dev-talent-showcase/constants/roles.ts"],"sourcesContent":["const rolesList = [\"Backend Developer\", \"Frontend Developer\", \"Full Stack Developer\", \"Mobile Developer\", \"DevOps Engineer\", \"UI/UX Designer\", \"Data Scientist\", \"Software Engineer\", \"QA Engineer\"];\n\nexport default rolesList.sort((a, b) => a.localeCompare(b));\n"],"names":[],"mappings":";;;AAAA,MAAM,YAAY;IAAC;IAAqB;IAAsB;IAAwB;IAAoB;IAAmB;IAAkB;IAAkB;IAAqB;CAAc;6CAErL,UAAU,IAAI,MAAC,CAAC,GAAG,IAAM,EAAE,aAAa,CAAC","debugId":null}},
    {"offset": {"line": 1464, "column": 0}, "map": {"version":3,"sources":["file:///home/futuzor/Documentos/JavaScript/React/NextJS/dev-talent-showcase/app/discover/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { skillsList } from \"@/constants/skills\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { motion } from \"motion/react\";\nimport {\n    Box,\n    Typography,\n    Container,\n    Grid,\n    Card,\n    Chip,\n    Stack,\n    IconButton,\n    Button,\n    Input,\n    FormControl,\n    FormLabel,\n    Select,\n    Option,\n    Divider,\n    Sheet,\n    Tooltip,\n} from \"@mui/joy\";\nimport { Search, Filter, LayoutPanelLeft, LayoutGrid } from \"lucide-react\";\n\nimport developersData from \"@/data/mockDeveloperData\";\nimport { getAllSkills } from \"@/services/developers/getAllSkills\";\nimport GridDeveloperCard from \"@/components/ui/GridDeveloperCard\";\nimport { DeveloperInfo, Province, ViewModeTypes } from \"@/types/types\";\nimport ListDeveloperCard from \"@/components/ui/ListDeveloperCard\";\nimport countries from \"world-countries\";\nimport { type Country } from \"world-countries\";\nimport { getCountryByName } from \"node-countries\";\nimport rolesList from \"@/constants/roles\";\n\n// Filters\n// const experienceLevels = [\"Any\", \"1-2 years\", \"3-5 years\", \"5+ years\"];\nconst isAvailableTypes = [\"Any\", \"Full-time\", \"Contract\", \"Freelance\"];\n\nexport default function DiscoverPage() {\n    const countryList = countries.sort((a, b) =>\n        a.name.common.localeCompare(b.name.common),\n    );\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    // const [selectedExperience, setSelectedExperience] = useState(\"Any\");\n    const [selectedAvailability, setSelectedAvailability] = useState(\"Any\");\n    const [selectedSkills, setSelectedSkills] = useState<string[]>([]);\n    const [viewMode, setViewMode] = useState<ViewModeTypes>(\"grid\");\n    const [likedDevelopers, setLikedDevelopers] = useState<string[]>([]);\n    const [filteredDevelopers, setFilteredDevelopers] =\n        useState(developersData);\n    const [mobileFilterOpen, setMobileFilterOpen] = useState(false);\n    const [selectedCountry, setSelectedCountry] = useState<string>(\"Any\");\n    const [selectedProvince, setSelectedProvince] = useState<string>(\"Any\");\n    const [provinces, setProvinces] = useState<Province[]>([]);\n    const [selectedRole, setSelectedRole] = useState<string>(\"Any\");\n\n    const toggleLike = (id: string) => {\n        if (likedDevelopers.includes(id)) {\n            setLikedDevelopers(likedDevelopers.filter((devId) => devId !== id));\n        } else {\n            setLikedDevelopers([...likedDevelopers, id]);\n        }\n    };\n\n    const toggleSkill = (skill: string) => {\n        if (selectedSkills.includes(skill)) {\n            setSelectedSkills(selectedSkills.filter((s) => s !== skill));\n        } else {\n            setSelectedSkills([...selectedSkills, skill]);\n        }\n    };\n\n    const changeCountry = (country: string) => {\n        // @ts-ignore\n        const countryObj: Country = getCountryByName(country);\n        setSelectedCountry(country);\n        const provinceList = getCountryByName(country)?.provinces?.sort(\n            // @ts-ignore\n            (a: Province, b: Province) => a.name.localeCompare(b.name),\n        );\n        // @ts-ignore\n        setProvinces(provinceList || []);\n\n        setSelectedProvince(\"Any\");\n    };\n\n    const changeRole = (role: string) => {\n        setSelectedRole(role);\n    };\n\n    const changeProvince = (province: string) => {\n        setSelectedProvince(province);\n    };\n\n    const applyFilters = () => {\n        let results = developersData;\n\n        // Search filter\n        if (searchQuery) {\n            const query = searchQuery.toLowerCase();\n            results = results.filter(\n                (dev) =>\n                    dev.name.toLowerCase().includes(query) ||\n                    dev.title.toLowerCase().includes(query) ||\n                    dev.bio.toLowerCase().includes(query) ||\n                    getAllSkills(dev.skills).some((skill) =>\n                        skill.toLowerCase().includes(query),\n                    ),\n            );\n        }\n\n        // Experience filter\n        /*if (selectedExperience !== \"Any\") {\n\t\t\tif (selectedExperience === \"1-2 years\") {\n\t\t\t\tresults = results.filter((dev) => parseInt(dev.experience) <= 2);\n\t\t\t} else if (selectedExperience === \"3-5 years\") {\n\t\t\t\tresults = results.filter(\n\t\t\t\t\t(dev) =>\n\t\t\t\t\t\tparseInt(dev.experience) >= 3 && parseInt(dev.experience) <= 5,\n\t\t\t\t);\n\t\t\t} else if (selectedExperience === \"5+ years\") {\n\t\t\t\tresults = results.filter((dev) => parseInt(dev.experience) >= 5);\n\t\t\t}\n\t\t}*/\n\n        // Availability filter\n        if (selectedAvailability !== \"Any\") {\n            results = results.filter(\n                (dev) => dev.availability === selectedAvailability,\n            );\n        }\n\n        // Skills filter\n        if (selectedSkills.length > 0) {\n            results = results.filter((dev) =>\n                selectedSkills.some((skill) =>\n                    getAllSkills(dev.skills).includes(skill),\n                ),\n            );\n        }\n\n        // Country filter\n        if (selectedCountry !== \"Any\") {\n            results = results.filter(\n                (dev: DeveloperInfo) => dev.country === selectedCountry,\n            );\n        }\n\n\t\t// Role filter\n\t\tif (selectedRole !== \"Any\") {\n\t\t\tresults = results.filter(\n\t\t\t\t(dev: DeveloperInfo) => dev.title === selectedRole,\n\t\t\t);\n\t\t}\n\n        setFilteredDevelopers(results);\n        setMobileFilterOpen(false);\n    };\n\n    const resetFilters = () => {\n        setSearchQuery(\"\");\n        // setSelectedExperience(\"Any\");\n        setSelectedAvailability(\"Any\");\n        setSelectedSkills([]);\n        setFilteredDevelopers(developersData);\n        setSelectedCountry(\"Any\");\n        setSelectedProvince(\"Any\");\n        setProvinces([]);\n        setSelectedRole(\"Any\");\n    };\n\n    return (\n        <Box\n            sx={{\n                py: { xs: 4, md: 8 },\n                px: 2,\n                bgcolor: \"background.body\",\n            }}\n        >\n            <Container\n                maxWidth=\"lg\"\n                sx={{ display: \"flex\", flexDirection: \"column\", gap: 4 }}\n            >\n                <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.5 }}\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        gap: \"1rem\",\n                    }}\n                >\n                    <Typography\n                        level=\"h1\"\n                        sx={{\n                            fontWeight: 800,\n                            fontSize: { xs: \"2rem\", md: \"2.5rem\" },\n                        }}\n                    >\n                        Discover developers\n                    </Typography>\n                    <Typography\n                        level=\"body-lg\"\n                        sx={{\n                            color: \"text.secondary\",\n                        }}\n                    >\n                        Find the perfect developer for your project. Browse\n                        profiles, filter by skills, and connect with top talent.\n                    </Typography>\n                </motion.div>\n\n                <Grid container spacing={4}>\n                    {/* Filters - Desktop */}\n                    <Grid\n                        xs={12}\n                        md={3}\n                        sx={{\n                            display: { xs: \"none\", md: \"block\" },\n                        }}\n                    >\n                        <Card\n                            variant=\"outlined\"\n                            sx={{ position: \"sticky\", top: \"100px\" }}\n                        >\n                            <Typography level=\"title-lg\" sx={{ mb: 2 }}>\n                                Filters\n                            </Typography>\n\n                            <Divider sx={{ my: 2 }} />\n\n                            <FormControl sx={{ mb: 2 }}>\n                                <FormLabel>Search</FormLabel>\n                                <Input\n                                    placeholder=\"Search developers...\"\n                                    startDecorator={<Search size={18} />}\n                                    value={searchQuery}\n                                    onChange={(e) =>\n                                        setSearchQuery(e.target.value)\n                                    }\n                                />\n                            </FormControl>\n\n                            <FormControl sx={{ mb: 2 }}>\n                                <FormLabel>Country</FormLabel>\n                                <Select\n                                    defaultValue={\"Any\"}\n                                    value={selectedCountry}\n                                    onChange={(_, value) =>\n                                        // @ts-ignore\n                                        changeCountry(value as string)\n                                    }\n                                >\n                                    <Option value=\"Any\">Any</Option>\n                                    {countryList.map((country: Country) => (\n                                        <Option\n                                            key={country.cca2}\n                                            value={country.name.common}\n                                        >\n                                            {country.name.common}\n                                        </Option>\n                                    ))}\n                                </Select>\n                            </FormControl>\n\n                            <FormControl sx={{ mb: 2 }}>\n                                <FormLabel>Province</FormLabel>\n                                <Select\n                                    defaultValue={\"Any\"}\n                                    value={selectedProvince}\n                                    onChange={(_, value) =>\n                                        changeProvince(value as string)\n                                    }\n                                >\n                                    <Option value=\"Any\">Any</Option>\n                                    {provinces.length > 0 &&\n                                        provinces.map((province) => (\n                                            <Option\n                                                key={province.name}\n                                                value={province.name}\n                                            >\n                                                {province.name}\n                                            </Option>\n                                        ))}\n                                </Select>\n                            </FormControl>\n\n                            <FormControl sx={{ mb: 2 }}>\n                                <FormLabel>Role</FormLabel>\n                                <Select\n                                    defaultValue={\"Any\"}\n                                    value={selectedRole}\n                                    onChange={(_, value) =>\n                                        changeRole(value as string)\n                                    }\n                                >\n                                    <Option value=\"Any\">Any</Option>\n                                    {rolesList.map((role: string) => (\n                                        <Option key={role} value={role}>\n                                            {role}\n                                        </Option>\n                                    ))}\n                                </Select>\n                            </FormControl>\n\n                            {/* <FormControl sx={{ mb: 2 }>\n\t\t\t\t\t\t\t\t<FormLabel>Experience</FormLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tvalue={selectedExperience}\n\t\t\t\t\t\t\t\t\tonChange={(_, value) =>\n\t\t\t\t\t\t\t\t\t\tsetSelectedExperience(value as string)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{experienceLevels.map((level) => (\n\t\t\t\t\t\t\t\t\t\t<Option key={level} value={level}>\n\t\t\t\t\t\t\t\t\t\t\t{level}\n\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</FormControl> */}\n\n                            <FormControl sx={{ mb: 2 }}>\n                                <FormLabel>Availability</FormLabel>\n                                <Select\n                                    value={selectedAvailability}\n                                    onChange={(_, value) =>\n                                        setSelectedAvailability(value as string)\n                                    }\n                                >\n                                    {isAvailableTypes.map((type) => (\n                                        <Option key={type} value={type}>\n                                            {type}\n                                        </Option>\n                                    ))}\n                                </Select>\n                            </FormControl>\n\n                            <FormControl sx={{ mb: 2 }}>\n                                <FormLabel>Skills</FormLabel>\n                                <Box\n                                    sx={{\n                                        display: \"flex\",\n                                        flexWrap: \"wrap\",\n                                        gap: 1,\n                                        mt: 1,\n                                    }}\n                                >\n                                    {skillsList.map((skill) => (\n                                        <Chip\n                                            key={skill}\n                                            variant={\n                                                selectedSkills.includes(skill)\n                                                    ? \"solid\"\n                                                    : \"soft\"\n                                            }\n                                            color={\n                                                selectedSkills.includes(skill)\n                                                    ? \"primary\"\n                                                    : \"neutral\"\n                                            }\n                                            size=\"sm\"\n                                            onClick={() => toggleSkill(skill)}\n                                            sx={{ cursor: \"pointer\" }}\n                                        >\n                                            {skill}\n                                        </Chip>\n                                    ))}\n                                </Box>\n                            </FormControl>\n\n                            <Stack direction=\"row\" spacing={1} sx={{ mt: 3 }}>\n                                <Button\n                                    variant=\"solid\"\n                                    color=\"primary\"\n                                    onClick={applyFilters}\n                                    fullWidth\n                                >\n                                    Apply Filters\n                                </Button>\n                                <Button\n                                    variant=\"plain\"\n                                    color=\"neutral\"\n                                    onClick={resetFilters}\n                                >\n                                    Reset\n                                </Button>\n                            </Stack>\n                        </Card>\n                    </Grid>\n\n                    {/* Mobile Filter Button */}\n                    <Box\n                        sx={{\n                            display: { xs: \"flex\", md: \"none\" },\n                            width: \"100%\",\n                            mb: 2,\n                            paddingX: 2,\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <Button\n                            variant=\"outlined\"\n                            color=\"neutral\"\n                            startDecorator={<Filter size={16} />}\n                            onClick={() => setMobileFilterOpen(true)}\n                        >\n                            Filters\n                        </Button>\n\n                        <Box sx={{ display: \"flex\", gap: 1 }}>\n                            <IconButton\n                                aria-label=\"Grid view\"\n                                variant={\n                                    viewMode === \"grid\" ? \"solid\" : \"plain\"\n                                }\n                                color={\n                                    viewMode === \"grid\" ? \"primary\" : \"neutral\"\n                                }\n                                onClick={() => setViewMode(\"grid\")}\n                            >\n                                <LayoutGrid size={20} />\n                            </IconButton>\n                            <IconButton\n                                aria-label=\"List view\"\n                                variant={\n                                    viewMode === \"list\" ? \"solid\" : \"plain\"\n                                }\n                                color={\n                                    viewMode === \"list\" ? \"primary\" : \"neutral\"\n                                }\n                                onClick={() => setViewMode(\"list\")}\n                            >\n                                <LayoutPanelLeft size={20} />\n                            </IconButton>\n                        </Box>\n                    </Box>\n\n                    {/* Mobile Filter Sheet */}\n                    {mobileFilterOpen && (\n                        <Sheet\n                            variant=\"outlined\"\n                            sx={{\n                                display: { xs: \"block\", md: \"none\" },\n                                position: \"fixed\",\n                                top: 0,\n                                left: 0,\n                                right: 0,\n                                bottom: 0,\n                                zIndex: 1000,\n                                p: 2,\n                                overflowY: \"auto\",\n                            }}\n                        >\n                            <Box\n                                sx={{\n                                    display: \"flex\",\n                                    justifyContent: \"space-between\",\n                                    alignItems: \"center\",\n                                    mb: 2,\n                                }}\n                            >\n                                <Typography level=\"title-lg\">\n                                    Filters\n                                </Typography>\n                                <IconButton\n                                    variant=\"plain\"\n                                    color=\"neutral\"\n                                    onClick={() => setMobileFilterOpen(false)}\n                                >\n                                    ✕\n                                </IconButton>\n                            </Box>\n\n                            <Divider sx={{ my: 2 }} />\n\n                            <FormControl sx={{ mb: 2 }}>\n                                <FormLabel>Search</FormLabel>\n                                <Input\n                                    placeholder=\"Search developers...\"\n                                    startDecorator={<Search size={18} />}\n                                    value={searchQuery}\n                                    onChange={(e) =>\n                                        setSearchQuery(e.target.value)\n                                    }\n                                />\n                            </FormControl>\n\n                            {/* <FormControl sx={{ mb: 2 }}>\n\t\t\t\t\t\t\t\t<FormLabel>Experience</FormLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tvalue={selectedExperience}\n\t\t\t\t\t\t\t\t\tonChange={(_, value) =>\n\t\t\t\t\t\t\t\t\t\tsetSelectedExperience(value as string)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{experienceLevels.map((level) => (\n\t\t\t\t\t\t\t\t\t\t<Option key={level} value={level}>\n\t\t\t\t\t\t\t\t\t\t\t{level}\n\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</FormControl> */}\n\n                            <FormControl sx={{ mb: 2 }}>\n                                <FormLabel>Availability</FormLabel>\n                                <Select\n                                    value={selectedAvailability}\n                                    onChange={(_, value) =>\n                                        setSelectedAvailability(value as string)\n                                    }\n                                >\n                                    {isAvailableTypes.map((type) => (\n                                        <Option key={type} value={type}>\n                                            {type}\n                                        </Option>\n                                    ))}\n                                </Select>\n                            </FormControl>\n\n                            <FormControl sx={{ mb: 2 }}>\n                                <FormLabel>Skills</FormLabel>\n                                <Box\n                                    sx={{\n                                        display: \"flex\",\n                                        flexWrap: \"wrap\",\n                                        gap: 1,\n                                        mt: 1,\n                                    }}\n                                >\n                                    {skillsList.map((skill) => (\n                                        <Chip\n                                            key={skill}\n                                            variant={\n                                                selectedSkills.includes(skill)\n                                                    ? \"solid\"\n                                                    : \"soft\"\n                                            }\n                                            color={\n                                                selectedSkills.includes(skill)\n                                                    ? \"primary\"\n                                                    : \"neutral\"\n                                            }\n                                            size=\"sm\"\n                                            onClick={() => toggleSkill(skill)}\n                                            sx={{ cursor: \"pointer\" }}\n                                        >\n                                            {skill}\n                                        </Chip>\n                                    ))}\n                                </Box>\n                            </FormControl>\n\n                            <Stack direction=\"row\" spacing={1} sx={{ mt: 3 }}>\n                                <Button\n                                    variant=\"solid\"\n                                    color=\"primary\"\n                                    onClick={applyFilters}\n                                    fullWidth\n                                >\n                                    Apply Filters\n                                </Button>\n                                <Button\n                                    variant=\"plain\"\n                                    color=\"neutral\"\n                                    onClick={resetFilters}\n                                >\n                                    Reset\n                                </Button>\n                            </Stack>\n                        </Sheet>\n                    )}\n\n                    {/* Results */}\n                    <Grid xs={12} md={9}>\n                        {/* View Mode Toggle - Desktop */}\n                        <Box\n                            sx={{\n                                display: { xs: \"none\", md: \"flex\" },\n                                justifyContent: \"space-between\",\n                                alignItems: \"center\",\n                                mb: 3,\n                            }}\n                        >\n                            <Typography\n                                level=\"body-sm\"\n                                textColor={\"text.primary\"}\n                            >\n                                Showing {filteredDevelopers.length} developers\n                            </Typography>\n                            <Box sx={{ display: \"flex\", gap: 1 }}>\n                                <IconButton\n                                    aria-label=\"Grid view\"\n                                    variant={\n                                        viewMode === \"grid\" ? \"solid\" : \"plain\"\n                                    }\n                                    color={\n                                        viewMode === \"grid\"\n                                            ? \"primary\"\n                                            : \"neutral\"\n                                    }\n                                    onClick={() => setViewMode(\"grid\")}\n                                >\n                                    <Tooltip\n                                        title=\"Grid view\"\n                                        variant=\"solid\"\n                                        arrow\n                                    >\n                                        <LayoutGrid size={20} />\n                                    </Tooltip>\n                                </IconButton>\n                                <IconButton\n                                    aria-label=\"List view\"\n                                    variant={\n                                        viewMode === \"list\" ? \"solid\" : \"plain\"\n                                    }\n                                    color={\n                                        viewMode === \"list\"\n                                            ? \"primary\"\n                                            : \"neutral\"\n                                    }\n                                    onClick={() => setViewMode(\"list\")}\n                                >\n                                    <Tooltip\n                                        title=\"List view\"\n                                        variant=\"solid\"\n                                        arrow\n                                    >\n                                        <LayoutPanelLeft size={20} />\n                                    </Tooltip>\n                                </IconButton>\n                            </Box>\n                        </Box>\n\n                        {/* Grid View */}\n                        {viewMode === \"grid\" && (\n                            <Grid container spacing={3}>\n                                {filteredDevelopers.map(\n                                    (\n                                        developer: DeveloperInfo,\n                                        index: number,\n                                    ) => (\n                                        <GridDeveloperCard\n                                            key={developer.id}\n                                            developer={developer}\n                                            index={index}\n                                            toggleLike={toggleLike}\n                                            isLiked={likedDevelopers.includes(\n                                                developer.id,\n                                            )}\n                                        />\n                                    ),\n                                )}\n                            </Grid>\n                        )}\n\n                        {/* List View */}\n                        {viewMode === \"list\" && (\n                            <Stack spacing={2}>\n                                {filteredDevelopers.map((developer, index) => (\n                                    <ListDeveloperCard\n                                        key={developer.id}\n                                        developer={developer}\n                                        index={index}\n                                        toggleLike={toggleLike}\n                                        isLiked={likedDevelopers.includes(\n                                            developer.id,\n                                        )}\n                                    />\n                                ))}\n                            </Stack>\n                        )}\n\n                        {filteredDevelopers.length === 0 && (\n                            <Box\n                                sx={{\n                                    textAlign: \"center\",\n                                    py: 8,\n                                }}\n                            >\n                                <Typography level=\"h4\" sx={{ mb: 2 }}>\n                                    No developers found\n                                </Typography>\n                                <Typography\n                                    level=\"body-md\"\n                                    sx={{ mb: 4, color: \"text.secondary\" }}\n                                >\n                                    Try adjusting your filters or search query\n                                </Typography>\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"neutral\"\n                                    onClick={resetFilters}\n                                >\n                                    Reset Filters\n                                </Button>\n                            </Box>\n                        )}\n                    </Grid>\n                </Grid>\n            </Container>\n        </Box>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}